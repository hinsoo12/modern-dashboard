
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Download, Filter } from "lucide-react";

interface Report {
  id: string;
  name: string;
  type: string;
  generatedBy: string;
  date: string;
  status: "completed" | "pending" | "failed";
  size: string;
}

const mockReports: Report[] = [
  {
    id: "REP001",
    name: "Monthly User Activity",
    type: "User Analytics",
    generatedBy: "System",
    date: "2024-02-20",
    status: "completed",
    size: "2.3 MB",
  },
  {
    id: "REP002",
    name: "Financial Summary Q1",
    type: "Financial",
    generatedBy: "john.doe@example.com",
    date: "2024-02-19",
    status: "pending",
    size: "1.5 MB",
  },
  {
    id: "REP003",
    name: "Security Audit Log",
    type: "Security",
    generatedBy: "System",
    date: "2024-02-18",
    status: "completed",
    size: "4.2 MB",
  },
];

const Reports = () => {
  return (
    <div className="space-y-6 animate-fadeIn">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-2xl font-bold tracking-tight">Reports</h1>
          <p className="text-muted-foreground">
            View and download system reports
          </p>
        </div>
        <div className="flex gap-3">
          <Button variant="outline" size="sm">
            <Filter className="w-4 h-4 mr-2" />
            Filter
          </Button>
          <Button variant="default" size="sm">
            Generate Report
          </Button>
        </div>
      </div>

      <div className="grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
        {[
          { label: "Total Reports", value: "1,234", change: "+12.3%" },
          { label: "Generated Today", value: "45", change: "+8.5%" },
          { label: "Storage Used", value: "2.3 GB", change: "+5.3%" },
          { label: "Success Rate", value: "98.5%", change: "+1.2%" },
        ].map((stat) => (
          <Card key={stat.label} className="p-6">
            <div className="flex justify-between items-center">
              <p className="text-sm font-medium text-gray-500">{stat.label}</p>
              <span
                className={`text-xs font-medium ${
                  stat.change.startsWith("+")
                    ? "text-green-600"
                    : "text-red-600"
                }`}
              >
                {stat.change}
              </span>
            </div>
            <p className="text-2xl font-bold mt-2">{stat.value}</p>
          </Card>
        ))}
      </div>

      <Card>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Report Name</TableHead>
              <TableHead>Type</TableHead>
              <TableHead>Generated By</TableHead>
              <TableHead>Date</TableHead>
              <TableHead>Status</TableHead>
              <TableHead>Size</TableHead>
              <TableHead>Actions</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {mockReports.map((report) => (
              <TableRow key={report.id}>
                <TableCell className="font-medium">{report.name}</TableCell>
                <TableCell>{report.type}</TableCell>
                <TableCell>{report.generatedBy}</TableCell>
                <TableCell>{report.date}</TableCell>
                <TableCell>
                  <span
                    className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                      report.status === "completed"
                        ? "bg-green-100 text-green-800"
                        : report.status === "pending"
                        ? "bg-yellow-100 text-yellow-800"
                        : "bg-red-100 text-red-800"
                    }`}
                  >
                    {report.status}
                  </span>
                </TableCell>
                <TableCell>{report.size}</TableCell>
                <TableCell>
                  <Button
                    variant="outline"
                    size="sm"
                    disabled={report.status === "pending"}
                  >
                    <Download className="w-4 h-4 mr-2" />
                    Download
                  </Button>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </Card>
    </div>
  );
};

export default Reports;
